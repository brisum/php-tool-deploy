<?php

header("Content-Type:text/plain");

error_reporting(E_ALL);
ini_set('display_errors', 1);

umask(0);

if (!isset($_GET['path'])) {
    die('Base path argument is absent');
}

$bp = $_GET['path'];
if (!file_exists($bp)) {
    die('Wrong base path');
}

$dirExploit = realpath(dirname(__FILE__));
$dirExploitSrc = "{$dirExploit}/src/export";
$fileList = "$dirExploitSrc/filelist";
$ignoreFilesContent = file_get_contents("{$dirExploit}/config/ignore_files");
$ignoreFiles = [];

foreach (array_filter(array_map('trim', explode("\n",$ignoreFilesContent ))) as $ignoreFile) {
    $ignoreFiles["{$bp}/{$ignoreFile}"] = $ignoreFile;
}
$ignoreFiles["{$bp}/exploit"] = 'exploit';

function recurse($dir)
{
    global $bp, $ignoreFiles, $fileList;

    foreach (scandir($dir) as $file) {
        if (in_array($file, ['.', '..', '.git', '.hg', '.idea', '.DS_Store', '._.DS_Store'])) {
            continue;
        }

        $path = "{$dir}/{$file}";
        if (class_exists('SplFileInfo')) {
            $fileInfo = new SplFileInfo($path);
            if ($fileInfo->isLink()) {
                continue;
            }
        }
        if (isset($ignoreFiles[$path])) {
            continue;
        }

        if (is_dir($path)) {
            recurse($path);
        } elseif (is_file($path)) {
            $hash = md5_file($path);
            $relativePath = str_replace("{$bp}/", '', $path);
            file_put_contents($fileList, "{$relativePath}|{$hash}\n", FILE_APPEND);
        }
    }
}

if (!file_exists($dirExploitSrc)) {
    mkdir($dirExploitSrc, 0755, true);
}
touch($fileList);
chmod($fileList, 0755);

recurse($bp);
